{
    "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "Lets Encrypt Example",
        "Metadata": {
    
        },
        "Parameters": {
          "InstanceType": {
            "Type":"String",
            "Default":"t2.micro",
            "AllowedValues":[
              "t2.micro",
              "t2.small"
            ],
            "Description":"Select an Instance Type.  Default is t2.micro. Allowable Values are: t2.micro and t2.small"
          },
          "HostedZone" : {
            "Type" : "String",
            "Description" : "The DNS name of an existing Amazon Route 53 hosted zone",
            "AllowedPattern" : "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
            "ConstraintDescription" : "must be a valid DNS zone name."
          },
          "SubDomain":{
              "ConstraintDescription" : "SubDomain is required.",
              "Description":"Name of the subdomain to be used for the external wildcard DNS: *.ThisValueHere.HostedZone.",
              "Type":"String",
              "MinLength":1,
              "Default": "d"
          },
          "KeyPair":{
            "Type":"AWS::EC2::KeyPair::KeyName"
          }
        },
        "Mappings": {
    
        },
        "Conditions": {
    
        },
        "Resources": {
          "EngineeringVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "10.0.0.0/16",
              "EnableDnsSupport":true,
              "EnableDnsHostnames":true,
              "Tags": [
                {"Key":"Name", "Value":"LetsEncryptExample"},
                {"Key":"Project", "Value":"SEIS 720: Let's Encrypt Example"}
              ]
            }
          },
          
          
          "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
              "Tags": [
                {"Key":"Name", "Value":"EngineeringVPCInternetGateway"},
                {"Key":"Project", "Value":"SEIS 720: Let's Encrypt Example"}
              ]
            },
            "DependsOn":"EngineeringVPC"
          },
    
          "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "VpcId": {"Ref":"EngineeringVPC"},
              "InternetGatewayId": { "Ref": "InternetGateway" }
            },
            "DependsOn":"InternetGateway"
          },      
    
          "PublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {"Ref":"EngineeringVPC"},
              "CidrBlock": "10.0.0.0/24",
              "MapPublicIpOnLaunch":true,
              "Tags": [
                {"Key":"Name", "Value":"PublicSubnet"},
                {"Key":"Project", "Value":"SEIS 720: Let's Encrypt Example"}
              ]
            },
            "DependsOn":"AttachGateway"
          },
          
          "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {"Ref":"EngineeringVPC"},
              "Tags": [
                {"Key":"Name", "Value":"PublicSubnetRouteTable"},
                {"Key":"Project", "Value":"SEIS 720: Let's Encrypt Example"}
              ]
            },
            "DependsOn":"PublicSubnet"
          },      
          
          "PublicInternetTraffic": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "RouteTableId": {"Ref":"PublicSubnetRouteTable"},
              "DestinationCidrBlock": "0.0.0.0/0",
              "GatewayId": {"Ref":"InternetGateway"}
            },
            "DependsOn":"PublicSubnetRouteTable"
          },      
          
          "PublicSubnetAssociateTable": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": {"Ref":"PublicSubnet"},
              "RouteTableId": {"Ref":"PublicSubnetRouteTable"}
            },
            "DependsOn":"PublicSubnetRouteTable"
          },      
            
          "WebserversSG": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
              "GroupName": "WebserversSG",
              "GroupDescription" : "Web Server Security Group",
              "SecurityGroupIngress" : [ 
                { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
                { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" },
                { "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0" },
                { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }              
              ],
              "VpcId": {"Ref":"EngineeringVPC"},
              "Tags": [
                {"Key":"Name", "Value":"WebserversSG"},
                {"Key":"Project", "Value":"SEIS 720: Let's Encrypt Example"}
              ]
            },
            "DependsOn":"PublicSubnet"
          },      
          "Route53IAMInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
              "Roles": [ "route53:*" ]
            }
          },
          
          "web1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
              "KeyName": {"Ref":"KeyPair"},
              "ImageId": "ami-00ade4596cd6ff237",
              "InstanceType": {"Ref":"InstanceType"},
              "SecurityGroupIds" : [
                {"Ref":"WebserversSG"}
              ],
              "IamInstanceProfile":{
                "Ref":"Route53IAMInstanceProfile"
              },
              "SubnetId":{"Ref":"PublicSubnet"},
              "Tags": [
                {"Key":"Name", "Value":"le-docker"},
                {"Key":"Project", "Value":"SEIS 720: Let's Encrypt Example"}
              ]
            },
            "DependsOn":"WebserversSG"
          },
          "HostedZoneRecordSet":{
            "DependsOn":"web1",
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
                "Comment": "Wildcard DNS name for docker.",  
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            "*.",
                            {
                                "Ref": "SubDomain"
                            },
                            ".",
                            {
                                "Ref": "HostedZone"
                            },
                            "."
                        ]
                    ]
                },
                "Type": "A",
                "TTL":60,
                "ResourceRecords": [
                  {"Fn::GetAtt" : ["web1","PublicIp"] }
                ]
              }
          }     
        },
        "Outputs": {
        }
    }